
<!-- Typing-style animated SVG banner. Save as banner.svg and reference in README with <img src="./banner.svg" /> -->
<svg xmlns="http://www.w3.org/2000/svg" width="900" height="120">
  <defs>
    <linearGradient id="g" x1="0" x2="1">
      <stop offset="0%" stop-color="#7dd3fc"/>
      <stop offset="100%" stop-color="#8b5cf6"/>
    </linearGradient>
  </defs>
  <rect width="100%" height="100%" fill="#0f172a" rx="12"/>
  <g transform="translate(40,70)">
    <text id="txt" x="0" y="0" font-family="Segoe UI, Roboto, Helvetica, Arial" font-size="28" fill="url(#g)"></text>
    <rect id="cursor" x="0" y="-24" width="8" height="28" fill="#7dd3fc">
      <animate attributeName="opacity" from="1" to="0" dur="1s" repeatCount="indefinite" />
    </rect>
  </g>

  <style>
    @keyframes typing { from { width: 0 } }
  </style>

  <script type="application/ecmascript"><![CDATA[
    (function(){
      var svg = document.documentElement;
      try {
        var txt = svg.getElementById('txt');
        var cursor = svg.getElementById('cursor');
        var frames = [
          'Hi, I\'m Jayanth — Developer',
          'Hi, I\'m Jayanth — Learner',
          'Hi, I\'m Jayanth — Innovator'
        ];
        var idx = 0, pos = 0, forward = true;
        function step(){
          var s = frames[idx];
          txt.textContent = s.substring(0, pos);
          var bbox = txt.getBBox();
          cursor.setAttribute('x', bbox.x + bbox.width + 6);
          if(forward){
            if(pos < s.length) pos++;
            else { forward = false; setTimeout(step, 900); return; }
          } else {
            if(pos > 0) pos--;
            else { forward = true; idx = (idx+1) % frames.length; setTimeout(step, 300); return; }
          }
          setTimeout(step, forward ? 80 : 30);
        }
        step();
      } catch(e){/* SVG scripting blocked on some viewers (GitHub raw SVG renders without scripts); fallback to static text */
        var t = svg.getElementById('txt'); if(t) t.textContent = "Hi, I'm Jayanth — Developer | Learner | Innovator";
      }
    })();
  ]]></script>
</svg>
